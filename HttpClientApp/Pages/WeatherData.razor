@page "/weather"
@using HttpClientApp.Config

@inject IConfiguration _configuration;
@inject IHttpClientFactory _clientFactory

<h3>Weather Data</h3>

@if (string.IsNullOrWhiteSpace(errorString) == false)
{
	<div class="h2">@errorString</div>
}
else if (forecasts is null || forecasts.Any() is false)
{
	<div class="h4">Loading ...</div>
}
else
{
	<table class="table table-striped">
		<thead class="thead-dark">
			<tr>
				<th>Country</th>
				<th>City</th>
				<th>Weather</th>
				<th>Detailes</th>
				<th>T low</th>
				<th>T high</th>
				<th>Sunrise</th>
				<th>Sunset</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var forecast in forecasts)
			{
				<tr>
					<th>@forecast.sys.country</th>
					<th>@forecast.name</th>
					<th>@forecast.weather[0].main</th>
					<th>@forecast.weather[0].description</th>
					<th>@forecast.main.temp_min</th>
					<th>@forecast.main.temp_max</th>
					<th>@DateTimeOffset.FromUnixTimeSeconds(forecast.sys.sunrise).LocalDateTime.ToShortTimeString()</th>
					<th>@DateTimeOffset.FromUnixTimeSeconds(forecast.sys.sunset).LocalDateTime.ToShortTimeString()</th>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	List<WeatherForecastModel> forecasts = new List<WeatherForecastModel>();
	string? errorString;

	string[] cities = new[]
	{
		"Voronezh,RU",
		"London,UK",
		"Tokyo",
		"Delhi",
		"Shanghai",
		"Beijing",
		"Mumbai",
		"Novosibirsk"
	};

	protected override async Task OnInitializedAsync()
	{
		var apiKey = BuildApiKey();
		try
		{
			var client = _clientFactory.CreateClient("openweathermap");
			await Parallel.ForEachAsync(cities, async (city, token) =>
			{
				var forecast = await client.GetFromJsonAsync<WeatherForecastModel>($"?q={city}&units=metric&{apiKey}");
				if (forecast != null)
				{
					forecasts.Add(forecast);
				}
			});
		}
		catch (Exception e)
		{
			errorString = $"There was an error getting our forecast: {e.Message}";
		}
	}

	private string BuildApiKey()
	{
		var config = _configuration.GetSection("WeatherApis:OpenWeatherMapOrg");
		return $"{config["ApiKey:Key"]}={config["ApiKey:Value"]}";
	}
}
